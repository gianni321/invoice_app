version: "3.9"

services:
  # MySQL Database Service
  db:
    image: mysql:8
    container_name: tt-mysql-dev
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: invoice_db
      MYSQL_USER: invoice_user
      MYSQL_PASSWORD: invoice_pass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d  # For initialization scripts
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot_password"]
      interval: 10s
      timeout: 5s
      retries: 10

  # Node.js API Service  
  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: tt-backend-dev
    restart: unless-stopped
    env_file: .env           # uses your existing .env
    ports:
      - "3000:3000"          # app
      - "9229:9229"          # node inspector
    # bind-mount code; keep container's node_modules isolated
    volumes:
      - ./:/app
      - /app/node_modules
    depends_on:
      db:
        condition: service_healthy
    # if your app has a /health route, keep this; otherwise remove
    healthcheck:
      test: ["CMD", "sh", "-c", "wget -qO- http://localhost:3000/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10

# Named volumes for data persistence
volumes:
  mysql_data:
